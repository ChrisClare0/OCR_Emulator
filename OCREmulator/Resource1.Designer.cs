//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace OCREmulator {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resource1 {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resource1() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("OCREmulator.Resource1", typeof(Resource1).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to OCR Emulator Help....
        ///
        ///TO START:
        ///
        ///Write your OCR code in notepad or (whatever is similar on MACS/Linux..) and save as a txt file. 
        ///Then use the LOAD button to read it in and the &quot;Interpret&quot; it. This will check to make sure the code can be run.
        ///You can then STEP through the code line by line...or &quot;fetch-execute&quot; by fetch-execute&quot;
        ///
        ///NUMBERS:
        ///
        ///All data is in hex. Live with it.
        ///
        ///SYNTAX:
        ///
        ///The source file needs to have three columns.These can be serarated by spaces or tabs(preferred!)
        ///The first colu [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string EmulatorHelp {
            get {
                return ResourceManager.GetString("EmulatorHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
        /// </summary>
        internal static System.Drawing.Icon Icon1 {
            get {
                object obj = ResourceManager.GetObject("Icon1", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ;Using 16F73 to emulate OCR processor
        ///
        ///	LIST   P=PIC16F73              ; list directive to define processor
        ///	#include &lt;p16F73.inc&gt;         ; processor specific variable definitions
        ///
        ///	__CONFIG    _WDT_OFF &amp; _PWRTE_OFF &amp;  _XT_OSC 
        ///;**********************************************************************
        ///;***** VARIABLE DEFINITIONS
        ///;the data memory starts at 0x20
        ///R0			equ		0x20		;Emulate S0
        ///R1			equ		0x21		;Emulate S1
        ///R2			equ		0x22		;Emulate S2
        ///R3			equ		0x23		;Emulate S3
        ///R4			equ		0x24		;Emulate S [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string setup_16F73 {
            get {
                return ResourceManager.GetString("setup_16F73", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 	LIST   P=PIC16F876	; list directive to define processor
        ///	#include &lt;p16F876.inc&gt;	; processor specific variable definitions
        ///	__CONFIG    _WDT_OFF  &amp;  _XT_OSC &amp; _DEBUG_ON  &amp; _BODEN_OFF  &amp; _PWRTE_ON &amp; _LVP_OFF &amp; _CPD_OFF &amp; _CP_OFF
        ///
        ///;**********************************************************************
        ///;VARIABLE DEFINITIONS - the data memory starts at 0x20
        ///R0		equ	0x20	;register use for OCR S0 etc
        ///R1		equ	0x21
        ///R2		equ	0x22
        ///R3		equ	0x23
        ///R4		equ	0x24		
        ///R5		equ	0x25		
        ///R6		equ	0x26		
        ///R7		equ	0x27		
        ///w [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string setup_16F876 {
            get {
                return ResourceManager.GetString("setup_16F876", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///
        ///#ifdef Use16F876A
        ///	__CONFIG    _WDT_OFF  &amp;  _XT_OSC &amp; _DEBUG_OFF  &amp; _BODEN_OFF  &amp; _PWRTE_ON &amp; _LVP_OFF &amp; _CPD_OFF &amp; _CP_OFF  &amp; _WRT_OFF  &amp; _CP_OFF
        ///	LIST   P=PIC16F876A	; list directive to define processor
        ///	#include &lt;p16F876A.inc&gt;	; processor specific variable definition
        ///endif
        ///
        ///#ifdef Use16F876
        ///	__CONFIG    _WDT_OFF  &amp;  _XT_OSC &amp; _DEBUG_OFF  &amp; _BODEN_OFF  &amp; _PWRTE_ON &amp; _LVP_OFF &amp; _CPD_OFF &amp; _CP_OFF  &amp; _WRT_ENABLE_ON 
        ///	LIST   P=PIC16F876	; list directive to define processor
        ///	#include &lt;p16F876.i [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string setup_16F8xx {
            get {
                return ResourceManager.GetString("setup_16F8xx", resourceCulture);
            }
        }
    }
}
